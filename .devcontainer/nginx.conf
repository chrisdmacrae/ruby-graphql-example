#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
  worker_connections  1024;
}

http {
  sendfile on;
  include mime.types;
  keepalive_timeout 65;
  default_type application/octet-stream;

  # ========
  # Upstreams
  # =========
  upstream api {
    server host.docker.internal:3000;
  }

  upstream client {
    server host.docker.internal:3001;
  }

  # ======================
  # Redirect http to https
  # ======================
  server {
    listen 80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  # =========
  # API
  # =========
  server {
    server_name                api.myapp.dev;
    listen                     443 ssl http2;
    root                       /var/www/api/public;
    try_files                  $uri/index.html $uri @c7r-api;
    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate            server.crt;
    ssl_certificate_key        server.key;
    proxy_set_header           Host $host;
    proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header           X-Forwarded-Proto $scheme;
    proxy_set_header           X-Forwarded-Ssl on; # Optional
    proxy_set_header           X-Forwarded-Port 443;
    proxy_set_header           X-Forwarded-Host $http_host;
    proxy_redirect             off;

    # =============
    # Base Location
    # =============
    location @api {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://api;
    }

    location ~* {
      proxy_pass http://api;
    }
  }

  # =========
  # Client
  # =========
  server {
    server_name                myapp.dev;
    listen                     443 ssl http2;
    root                       /var/www/client/public;
    try_files                  $uri/index.html $uri @c7r-api;
    ssl_protocols              TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate            server.crt;
    ssl_certificate_key        server.key;
    proxy_set_header           Host $host;
    proxy_set_header           X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header           X-Forwarded-Proto $scheme;
    proxy_set_header           X-Forwarded-Ssl on; # Optional
    proxy_set_header           X-Forwarded-Port 443;
    proxy_set_header           X-Forwarded-Host $http_host;
    proxy_redirect             off;

    # =======
    # Next.js
    # =======
    location ~* /_next/webpack-hmr {
      proxy_pass http://client;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    # =============
    # Client Routes
    # =============
    location ~* {
      proxy_pass http://client;
    }
  }

  include servers/*;
}
